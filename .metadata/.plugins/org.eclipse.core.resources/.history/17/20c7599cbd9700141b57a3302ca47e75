package edu.uweo.java2.rmi_list.server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.Collection;
import java.util.List;

import edu.java2.exercise.rmi.server.HWorldInterface;

public class RMIListServer implements Runnable, RMIFilteredList {
    
    public RMIListServer() {
	
    }
    
    public RMIListServer(String regHost, int report) {
	
    }

    public static void main(String[] args) {
	if (System.getSecurityManager() == null) {
	    System.setSecurityManager(new SecurityManager());
	}
	try {
	    RMIListServer filterEngine = new RMIListServer();
	    RMIFilteredList stub = (RMIFilteredList) UnicastRemoteObject.exportObject(filterEngine, 0);
	    Registry registry = LocateRegistry.getRegistry();
	    registry.rebind("rmi:rmilist", stub);
	    System.out.println("filterEngine bound");
	} catch(Exception e ){
	    System.err.println("Filter Engine Error");
	    e.printStackTrace();
	}
    }
    
    @Override
    public void run() {
	try {
	    RMIListServer impl = new RMIListServer();
	    Registry registry = LocateRegistry.getRegistry(port);
	    System.out.println(registry);
	    RMIFilteredList stub = (RMIFilteredList) UnicastRemoteObject.exportObject(impl, 0);
	    System.out.println("impl instantiated");
	    registry.rebind("rmi:Hworld", stub);
	    System.out.println("stub bound" + stub);
	} catch (RemoteException e) {
	    System.err.println("exception thrown");
	    e.printStackTrace();
	    System.exit( 1 );
	}
    }

    @Override
    public <T extends Comparable<?>> List<T> getList(Collection<T> input,
	    ListFilter<T> filter) throws RemoteException {
	return null;
    }
}
