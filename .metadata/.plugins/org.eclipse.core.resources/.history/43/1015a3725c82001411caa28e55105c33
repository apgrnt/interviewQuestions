package edu.uweo.java2.homework.networking1;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.UnknownHostException;
import java.util.Map;


public class PlaygroundServer implements Runnable  {
    
    int acceptTimeout = 500;
    int activeClients = 4;
    int activeConnections = 2;
    int clientTimeout = 500;
    String greeting = "Welcome to the Thunderdome";
    int port = 57001;
    //Map<String, String> settings = new HashMap<>();
    
    
    public PlaygroundServer( Map<String, String> settings ) throws IOException  {
	if (settings.get(acceptTimeout) != null)
	setAcceptTimeout(settings.get(acceptTimeout));
	
	if (settings.get(activeClients) != null)
	setActiveClients(settings.get(activeClients));
	
	if (settings.get(activeConnections) != null)
	setActiveConnections(settings.get(activeConnections));
	
	if (settings.get(clientTimeout) != null)
	setClientTimeout(settings.get(clientTimeout));
	
	if (settings.get(greeting) != null)
	setGreeting(settings.get(greeting));
	
	if (settings.get(port) != null)
	setPort(settings.get(port));
	
	
    }
    @Override
    public void run() {
	// listener;
	try {
	    ServerSocket  listener = new ServerSocket(port);
	} catch (IOException e) {
	    // TODO Auto-generated catch block
	    e.printStackTrace();
	}
	System.out.println("The server is now listening!");
	try {
	    
	    while (!Thread.currentThread().isInterrupted()) {
		
		try {
		    new Thread( new Client(listeer.accept() ) ).start();
		} catch (IOException e) {
		    // TODO Auto-generated catch block
		    e.printStackTrace();
		}
		
	    }
	} finally {
	}
    }
    public void shutdown() {
	// TODO Auto-generated method stub
	
    }

    public int getAcceptTimeout() {
        return acceptTimeout;
    }

    public void setAcceptTimeout(String string) {
        this.acceptTimeout = Integer.parseInt(string);
    }

    public int getActiveclients() {
        return activeClients;
    }

    public void setActiveClients(String string) {
        this.activeClients = Integer.parseInt(string);
    }

    public int getActiveConnections() {
        return activeConnections;
    }

    public void setActiveConnections(String string) {
        this.activeConnections = Integer.parseInt(string);
    }

    public int getClientTimeout() {
        return clientTimeout;
    }

    public void setClientTimeout(String string) {
        this.clientTimeout = Integer.parseInt(string);
    }

    public String getGreeting() {
        return greeting;
    }

    public void setGreeting(String string) {
        this.greeting = string;
    }

    public int getPort() {
        return port;
    }

    public void setPort(String string) {
        this.port = Integer.parseInt(string);
    }

   
 }

   